set_names('code') %>%
filter(!is.na(code))
codefills <- xlsx_cells(path, sheets = "SET data") %>%
dplyr::filter(row >= 2) %>% # Omit the header row and name column
mutate(fill_color = fill_colors[local_format_id]) %>%
select(row, col, fill_color) %>%
spread(col, fill_color) %>%
select(11) %>%   # looked in spreadsheet to make sure this is correct column
set_names(paste0(colnames(codes), "_fill")) %>%
filter(!is.na(code_fill))
codes$fill <- codefills$code_fill
#############################
#############################
# get rid of some intermediate objects
rm('codefills', 'col', 'fill_colors', 'fills_exist', 'i', 'names', 'sums')
#############################
# Match fills and codes in main dataframe
#############################
# pin_measurement_mm is typically the column that has color coding
# sometimes set_pin_no does, but that may be resolved - so I'm writing this
# in such a way that the code will run with or without it
# using the if(exists) stuff
dat_coded <- left_join(dat_all, codes, by = c('pin_measurement_mm_fill' = 'fill')) %>%
mutate(pin_code = code,
code = NULL)
if(exists('set_pin_no_fill', dat_coded) == TRUE) {
dat_coded <- left_join(dat_coded, codes, by = c('set_pin_no_fill' = 'fill')) %>%
mutate(pin_code2 = code,
code = NULL)
}
dat_coded <- dat_coded %>%
mutate(code = case_when(
!is.na(pin_measurement_mm_fill) & !is.na(pin_code) ~ pin_code,
!is.na(pin_measurement_mm_fill) & is.na(pin_code) ~ 'other, not in key',
TRUE ~ '0'
)
) %>%
select(-pin_measurement_mm_fill, -pin_code)
if(exists('set_pin_no_fill', dat_coded) == TRUE) {
dat_coded <- dat_coded %>%
mutate(code = case_when(
!is.na(set_pin_no_fill) & !is.na(pin_code2) ~ pin_code2,
!is.na(set_pin_no_fill) & is.na(pin_code2) ~ 'other, not in key',
!is.na(code) & !is.na(pin_code2) ~ paste0(code, pin_code2),
TRUE ~ code
)) %>%
select(-set_pin_no_fill, -pin_code2)
}
# see how many codes are not in key
# hopefully after the original file is looked at, this will be 0
sum(dat_coded$code == 'other, not in key')
# change names to be slightly more consistent
# also get rid of any extra rows
dat_coded <- dat_coded %>%
select(set_id = site_label, date, arm_position = set_arm_position, pin_number = set_pin_no, pin_height = pin_measurement_mm, code, notes, latitude, longitude) %>%
filter(is.na(set_id) == FALSE)
# spit out csv file
write_csv(dat_coded, 'data/intermediate/DEL.csv')
# neg_pin_hts <- dat_coded %>% filter(pin_height < 0)
# write_csv(neg_pin_hts, 'data/needs_attention/DEL_neg_pin_heights.csv')
library(tidyverse)
path <- 'data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- DEL
##########################################
dat <- read_csv(file_of_choice)
# general: what's in here and what does each column look like?
names(dat)
str(dat)
# check to make sure everything is within boundaries
# look for duplication in names; pin numbers that are not 1-9; negative pin heights
unique(dat$set_id)
summary(dat$date)
unique(dat$arm_position)
unique(dat$pin_number)
summary(dat$pin_number)
summary(dat$pin_height)
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
path <- 'data/intermediate'
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- SOS
dat <- read_csv(file_of_choice)
# general: what's in here and what does each column look like?
names(dat)
str(dat)
# check to make sure everything is within boundaries
# look for duplication in names; pin numbers that are not 1-9; negative pin heights
unique(dat$set_id)
summary(dat$date)
unique(dat$arm_position)
unique(dat$pin_number)
summary(dat$pin_number)
summary(dat$pin_height)
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
# produce a data frame of negative pin heights
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
# if there are negative pin heights, show them
if(sum(dat$pin_height < 0) > 1) {
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
}
# if there are negative pin heights, show them
if(sum(dat$pin_height < 0) > 1) {
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
} else {print("all pin heights are >0")}
# check for negative pin heights
if(sum(dat$pin_height < 0) > 1) {
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
} else {print("all pin heights are >0")}
# check for negative pin heights
if(sum(dat$pin_height < 0) > 1) {
print(paste0("there are ", sum(dat$pin_height < 0), " pin heights <0. They are:"))
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
} else {print("all pin heights are >0")}
##########################################
file_of_choice <- DEL
dat <- read_csv(file_of_choice)
# general: what's in here and what does each column look like?
names(dat)
str(dat)
# check to make sure everything is within boundaries
# look for duplication in names; pin numbers that are not 1-9; negative pin heights
unique(dat$set_id)
summary(dat$date)
unique(dat$arm_position)
unique(dat$pin_number)
summary(dat$pin_number)
summary(dat$pin_height)
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
# check for negative pin heights
if(sum(dat$pin_height < 0) > 1) {
print(paste0("there are ", sum(dat$pin_height < 0), " pin heights <0. They are:"))
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
} else {print("all pin heights are >0")}
sum(dat$pin_height < 0) > 1
sum(dat$pin_height < 0)
summary(dat$pin_height)
dat$pin_height < 0
sum(dat$pin_height < 0)
sum(dat$pin_height < 0, na.rm = TRUE)
# check for negative pin heights
if(sum(dat$pin_height < 0, na.rm = TRUE) > 1) {
print(paste0("there are ", sum(dat$pin_height < 0), " pin heights <0. They are:"))
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
} else {print("all pin heights are >0")}
# check for negative pin heights
if(sum(dat$pin_height < 0, na.rm = TRUE) > 1) {
print(paste0("There are ", sum(dat$pin_height < 0), " pin heights <0. They are:"))
neg_pin_hts <- dat %>% filter(pin_height < 0)
neg_pin_hts
print("View 'neg_pin_hts' data frame to see more.")
} else {print("all pin heights are >0")}
head(neg_pin_hts, 10)
View(neg_pin_hts)
library(tidyverse)
path <- 'data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- DEL
##########################################
dat <- read_csv(file_of_choice)
# general: what's in here and what does each column look like?
names(dat)
str(dat)
# check to make sure everything is within boundaries
# look for duplication in names; pin numbers that are not 1-9; negative pin heights
unique(dat$set_id)
summary(dat$date)
unique(dat$arm_position)
unique(dat$pin_number)
summary(dat$pin_number)
summary(dat$pin_height)
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
# check for negative pin heights
if(sum(dat$pin_height < 0, na.rm = TRUE) > 1) {
print(paste0("There are ", sum(dat$pin_height < 0), " pin heights <0. The first 10 are below. To see more, enter the command View(neg_pin_hts)."))
neg_pin_hts <- dat %>% filter(pin_height < 0)
head(neg_pin_hts, 10)
} else {print("all pin heights are >0")}
View(neg_pin_hts)
# check for negative pin heights
if(sum(dat$pin_height < 0, na.rm = TRUE) > 1) {
print(paste0("There are ", sum(dat$pin_height < 0), " pin heights <0. The first 10 are below. \nTo see more, enter the command View(neg_pin_hts)."))
neg_pin_hts <- dat %>% filter(pin_height < 0)
head(neg_pin_hts, 10)
} else {print("all pin heights are >0")}
?clean_names
print(paste0("There are ", sum(dat$pin_height < 0, na.rm = TRUE), " pin heights <0. The first 10 are below. To see more, enter the command View(neg_pin_hts)."))
# check for negative pin heights
if(sum(dat$pin_height < 0, na.rm = TRUE) > 1) {
print(paste0("There are ", sum(dat$pin_height < 0, na.rm = TRUE), " pin heights <0. The first 10 are below. To see more, enter the command View(neg_pin_hts)."))
neg_pin_hts <- dat %>% filter(pin_height < 0)
head(neg_pin_hts, 10)
} else {print("all pin heights are >0")}
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_grid(arm_position~set_id, scales = 'free_y') +
theme_bw()
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_grid(set_id ~ arm_position, scales = 'free_y') +
theme_bw()
library(janitor)
?remove_empty
library(tidyverse)
library(lubridate)
library(readxl)
library(tidyxl)
library(unpivotr)
library(janitor)
#############################
# Deal with main data frame
#############################
path <- 'data/raw_original/DEL.xlsx'
dat <- read_excel(path, sheet = 'SET data')
dat <- dat %>% remove_empty()
View(dat)
dat <- read_excel(path, sheet = 'SET data')
dat <- remove_empty("rows")
dat <- dat %>%remove_empty("rows")
?coalesce
table(dat$`Site Label`)
tabyl(dat$`Site Label`)
dat <- dat %>% clean_names()
tabyl(dat$site_label)
dat %>% tabyl(site_label, date)
dat %>% tabyl(site_label, set_arm_position)
library(janitor)
library(tidyverse)
path <- 'data/intermediate'
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- DEL
dat <- read_csv(file_of_choice)
dat %>% tabyl(set_id)
dat %>% tabyl(set_id, arm_position)
dat %>% tabyl(set_id, pin_number)
dat %>% tabyl(set_id, arm_position, pin_number)
dat %>% tabyl(arm_position, pin_number, set_id)
dat %>% tabyl(arm_position, pin_number, set_id) %>%
adorn_title("combined")
dat %>% tabyl(arm_position, pin_number, set_id) %>%
adorn_title()
Sys.Date()
tabyl(names(dat))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(knitr)
kable(tabyl(names(dat)))
kable(names(dat))
kable(str(dat))
?str
str(dat, max.level = 1)
str(dat, give.attr = FALSE)
kable(str(dat, give.attr = FALSE))
glimpse(dat)
kable(glimpse(dat))
glimpse(dat)
library(skimr)
skim(dat)
type(dat)
types(dat)
sapply(dat, class)
knitr::kable(sapply(dat, class))
kable(summary$date)
kable(summary(dat$date))
library(lubridate)
dates <- dat$date %>%
mutate(year = year(date),
month = month(date))
dates <- dat$date
dates <- data.frame(dat$date)
dates <- data.frame(dat$date) %>%
mutate(year = year(date),
month = month(date))
test <- ymd("2011-01-01")
year(test)
month(test)
class(test)
dates <- data.frame(as.Date(dat$date)) %>%
mutate(year = year(date),
month = month(date))
test <- dates[1:4,]
test
year(test)
month(test)
year(dates)
year(dates$date)
class(dates$date)
class(dat$date)
dates <- dat %>%
select(date) %>%
mutate(year = year(date),
month = month(date))
head(dates)
?month
dates %>% tabyl(year, month) %>%
kable()
dates %>% tabyl(year, month) %>%
adorn_title() %>%
kable()
dates %>% tabyl(year, month, set_id)
dates <- dat %>%
select(date, set_id) %>%
mutate(year = year(date),
month = month(date))
dates %>% tabyl(year, month, set_id)
?tabyl
dates %>% tabyl(year, month, show_na = FALSE) %>%
adorn_title() %>%
kable()
# check for negative pin heights
if(sum(dat$pin_height < 0, na.rm = TRUE) > 1) {
print(paste0("There are ", sum(dat$pin_height < 0, na.rm = TRUE), " pin heights <0. The first 10 are below. To see more, enter the command View(neg_pin_hts)."))
neg_pin_hts <- dat %>% filter(pin_height < 0)
kable(neg_pin_hts)
} else {print("all pin heights are >0")}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
path <- '../data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- SOS
##########################################
dat <- read_csv(file_of_choice)
library(tidyverse)
library(janitor)
library(knitr)
library(lubridate)
path <- '../data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- SOS
##########################################
dat <- read_csv(file_of_choice)
# check to make sure everything is within boundaries
# look for duplication in names; pin numbers that are not 1-9; negative pin heights
dates <- dat %>%
select(date, set_id) %>%
mutate(year = year(date),
month = month(date))
dates %>% tabyl(year, month) %>%
adorn_title() %>%
kable()
dates %>% tabyl(year, month, set_id) %>%
adorn_title()
dat %>% tabyl(set_id) %>%
kable()
dat %>% tabyl(set_id, arm_position) %>%
adorn_title %>%
kable()
dat %>% tabyl(set_id, pin_number) %>%
kable()
dat %>% tabyl(arm_position, pin_number, set_id) %>%
adorn_title()
# pipe these into knitr::kable for an rmarkdown report
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
# check to make sure everything is within boundaries
# look for duplication in names; pin numbers that are not 1-9; negative pin heights
dates <- dat %>%
select(date, set_id) %>%
mutate(year = year(date),
month = month(date))
dates %>% tabyl(year, month) %>%
adorn_title() %>%
kable()
dates %>% tabyl(year, month, set_id) %>%
adorn_title()
dat %>% tabyl(set_id) %>%
kable()
dat %>% tabyl(set_id, arm_position) %>%
adorn_title %>%
kable()
dat %>% tabyl(set_id, pin_number) %>%
kable()
dat %>% tabyl(arm_position, pin_number, set_id) %>%
adorn_title()
# pipe these into knitr::kable for an rmarkdown report
path <- '../data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- DEL
##########################################
dat <- read_csv(file_of_choice)
library(tidyverse)
library(janitor)
library(knitr)
library(lubridate)
path <- '../data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- DEL
##########################################
dat <- read_csv(file_of_choice)
path <- '../data/intermediate'
files_to_check <- dir(path)
path <- 'data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_of_choice <- DEL
dat <- read_csv(file_of_choice)
kable(head(dat))
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
kable(head(dat))
kable(tail(dat))
library(tidyverse)
library(janitor)
library(knitr)
library(lubridate)
path <- 'data/intermediate'
files_to_check <- dir(path)
DEL <- paste0(path, '/DEL.csv')
SOS <- paste0(path, '/SOS.csv')
##########################################
file_to_read <- DEL
##########################################
dat <- read_csv(file_to_read)
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
theme_bw()
kable(head(dat))
kable(tail(dat))
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
ggtitle('Histogram of Pin Measurements') +
theme_bw()
kable(head(dat))
kable(tail(dat))
kable(head(dat))
kable(tail(dat))
ggplot(dat) +
geom_histogram(aes(pin_height), fill = 'navyblue', bins = 50) +
facet_wrap(~set_id, ncol = 2, scales = 'free_y') +
ggtitle('Histograms of Pin Measurements by SET ID') +
theme_bw()
library(here)
test <- read_csv("data", "intermediate", "DEL.csv")
test <- read_csv(here("data", "intermediate", "DEL.csv"))
test <- read_csv(here("data", "raw_corrected", "DEL*.csv"))
test <- read_csv(here("data", "raw_original", "DEL.csv"))
test <- read_excel(here("data", "raw_original", "DEL.xlsx"))
test <- read_xlsx(here("data", "raw_original", "DEL.xlsx"))
library(tidyverse)
library(janitor)
library(knitr)
library(lubridate)
test <- read_xlsx(here("data", "raw_original", "DEL.xlsx"))
test <- read_excel(here("data", "raw_original", "DEL.xlsx"))
library(here)
path <- here('data', 'intermediate')
files_to_check <- dir(path)
library(readxl)
here()
getwd()
testpath <- here("data", "raw_original")
testpath
testpath <- here("R")
testpath
testpath <- here("data/raw_original")
testpath
dir(testpath)
dir(here("R"))
dir(here("data/raw_corrected"))
dir(here("raw_corrected"))
dir(here())
dir(here("drafts"))
dir(here("data"))
